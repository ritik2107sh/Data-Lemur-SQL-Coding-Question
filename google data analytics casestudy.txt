create database google;
use google;

CREATE TABLE TRIPDATA AS
SELECT * FROM TRIPDATA_01
UNION ALL
SELECT * FROM TRIPDATA_02
UNION ALL
SELECT * FROM TRIPDATA_03
UNION ALL
SELECT * FROM TRIPDATA_04
UNION ALL
SELECT * FROM TRIPDATA_05
UNION ALL
SELECT * FROM TRIPDATA_06
UNION ALL
SELECT * FROM TRIPDATA_07
UNION ALL
SELECT * FROM TRIPDATA_08
UNION ALL
SELECT * FROM TRIPDATA_09
UNION ALL
SELECT * FROM TRIPDATA_10
UNION ALL
SELECT * FROM TRIPDATA_11
UNION ALL
SELECT * FROM TRIPDATA_12;


SELECT * FROM TRIPDATA;


SELECT * FROM TRIPDATA LIMIT 5;
--------------------------------------EXPLORATORY DATA ANALYSIS----------------------------------------------------------

SELECT COUNT(*) AS total_records
FROM TRIPDATA;
--5719877 RECORDS IN TABLE
-------------------------------CHECKING DATATYPE------------------------------------
SELECT column_name, data_type
FROM google.INFORMATION_SCHEMA.COLUMNS
WHERE table_name = 'TRIPDATA';

----------------------
SELECT
    SUM(CASE WHEN START_LAT IS NULL THEN 1 ELSE 0 END) AS START_LAT,
    SUM(CASE WHEN ENDED_AT IS NULL THEN 1 ELSE 0 END) AS ENDED_AT,
    SUM(CASE WHEN END_LAT IS NULL THEN 1 ELSE 0 END) AS END_LAT,
    SUM(CASE WHEN END_STATION_ID IS NULL THEN 1 ELSE 0 END) AS END_STATION_ID,
    SUM(CASE WHEN RIDEABLE_TYPE IS NULL THEN 1 ELSE 0 END) AS RIDEABLE_TYPE,
    SUM(CASE WHEN END_LNG IS NULL THEN 1 ELSE 0 END) AS END_LNG,
    SUM(CASE WHEN STARTED_AT IS NULL THEN 1 ELSE 0 END) AS STARTED_AT,
    SUM(CASE WHEN START_LNG IS NULL THEN 1 ELSE 0 END) AS START_LNG,
    SUM(CASE WHEN MEMBER_CASUAL IS NULL THEN 1 ELSE 0 END) AS MEMBER_CASUAL,
    SUM(CASE WHEN START_STATION_NAME IS NULL THEN 1 ELSE 0 END) AS START_STATION_NAME,
    SUM(CASE WHEN RIDE_ID IS NULL THEN 1 ELSE 0 END) AS RIDE_ID,
    SUM(CASE WHEN START_STATION_ID IS NULL THEN 1 ELSE 0 END) AS START_STATION_ID,
    SUM(CASE WHEN END_STATION_NAME IS NULL THEN 1 ELSE 0 END) AS END_STATION_NAME
FROM TRIPDATA;

-- FOR ABOUT 9.2LAC RECORDS END_STATION_ID IS MISSING
-- FOR 8.7LAC RECORDS STAT_STATION_ID AND NAME IS MISSING
-- END_LAT, END_LNG MISSING FOR 6.9K RECORDS


SELECT * FROM TRIPDATA ;

----------------------------------DUPLICATE CHECK-------------------------------

SELECT
    RIDE_ID,
    RIDEABLE_TYPE,
    STARTED_AT,
    ENDED_AT,
    START_STATION_NAME,
    START_STATION_ID,
    END_STATION_NAME,
    END_STATION_ID,
    START_LAT,
    START_LNG,
    END_LAT,
    END_LNG,
    MEMBER_CASUAL,
    COUNT(*)
FROM TRIPDATA
GROUP BY
    RIDE_ID,
    RIDEABLE_TYPE,
    STARTED_AT,
    ENDED_AT,
    START_STATION_NAME,
    START_STATION_ID,
    END_STATION_NAME,
    END_STATION_ID,
    START_LAT,
    START_LNG,
    END_LAT,
    END_LNG,
    MEMBER_CASUAL
HAVING COUNT(*) > 1;
--NO DUPLICATE

SELECT
    RIDE_ID,
    STARTED_AT,
    ENDED_AT,
    COUNT(*)
FROM TRIPDATA
GROUP BY
    RIDE_ID,
    STARTED_AT,
    ENDED_AT
HAVING COUNT(*) > 1;

SELECT
    RIDE_ID,
    COUNT(*)
FROM TRIPDATA
GROUP BY
    RIDE_ID
HAVING COUNT(*) > 1;
-- SO WE ARE NOT HAVING ANY RIDE_ID WHICH APPEARS TWICE

SELECT START_STATION_NAME,COUNT(*) AS COUNTS FROM TRIPDATA GROUP BY START_STATION_NAME;

SELECT COUNT(DISTINCT START_STATION_NAME) AS COUNTS FROM TRIPDATA;
--1592 START STATIONS

SELECT COUNT(DISTINCT END_STATION_NAME) AS COUNTS FROM TRIPDATA;
--1597

SELECT SUM(CASE WHEN START_STATION_NAME = END_STATION_NAME THEN 1 ELSE 0 END) AS COUNTS FROM TRIPDATA;
--276038 THERE ARE 2.7LAC RECORDS WHERE START AND END STATIONS ARE THE SAME.

SELECT MEMBER_CASUAL ,COUNT(*) AS COUNTS FROM TRIPDATA GROUP BY MEMBER_CASUAL;
-- MEMBERS ARE 36.6 LAC AND CASUAL ARE 20.5 LAC

SELECT RIDEABLE_TYPE , COUNT(*) AS COUNTS FROM TRIPDATA GROUP BY RIDEABLE_TYPE;
--THREE TYPES OF RIDES AVAILABLE WITH ELECTRIC BIKE CONTRIBUTING MAXIMUM RIDES AND DOCKED_BIKE MINIMUM

 
SELECT COUNT(*) AS longer_than_a_day
FROM TRIPDATA
WHERE DATEDIFF('minute', started_at, ended_at) >= 1440;
--THERE ARE 6.4K RIDES THAT ARE TAKING MORE THAN A DAY



 
SELECT COUNT(*) AS longer_than_a_day
FROM TRIPDATA
WHERE DATEDIFF('minute', started_at, ended_at) <=1;
--1.99 LAC RIDES TAKING LESS THEN 1 MINUTE


ALTER TABLE TRIPDATA
ADD COLUMN RIDE_LENGTH NUMBER;

UPDATE TRIPDATA
SET RIDE_LENGTH = DATEDIFF('minute', started_at, ended_at);
--ADDED A COLUMN WITH RIDE_LENGTH IN MINUTES 

SELECT * FROM TRIPDATA;

SELECT 
    started_at,
    TO_CHAR(started_at, 'DY') AS day_of_week
FROM TRIPDATA;

ALTER TABLE TRIPDATA
ADD COLUMN DAY_OF_WEEK VARCHAR(10);

UPDATE TRIPDATA
SET DAY_OF_WEEK = TO_CHAR(STARTED_AT , 'DY');

ALTER TABLE TRIPDATA
ADD COLUMN MONTHS VARCHAR(10);
UPDATE TRIPDATA
SET MONTHS = TO_CHAR(STARTED_AT , 'Mon');

SELECT * FROM TRIPDATA WHERE DAY_OF_WEEK IS NULL;

----------------------------------------------------CREATE NEW TABLE-------------------------------------------------------

CREATE TABLE TRIPS AS
SELECT RIDE_ID ,RIDEABLE_TYPE,MEMBER_CASUAL,RIDE_LENGTH,DAY_OF_WEEK,MONTHS,STARTED_AT,ENDED_AT FROM TRIPDATA;


SELECT * FROM TRIPS;

 
SELECT COUNT(*) AS longer_than_a_day
FROM TRIPS
WHERE DATEDIFF('minute', started_at, ended_at) <=0 ;
-- 88950 RIDES WITH NEGATIVE DIFFERENCE IN TIME 
--INCONSISTENT
--REMOVE SUCH ROWS

DELETE FROM TRIPS WHERE DATEDIFF('minute', started_at, ended_at) <=0 ;
-------------------------------------------ANALYSING THE DATA----------------------------------------------------------------

SELECT * FROM TRIPS;

SELECT RIDEABLE_TYPE, COUNT(RIDE_ID) AS COUNTS FROM TRIPS GROUP BY RIDEABLE_TYPE ORDER BY COUNTS DESC;
--ELECTRIC_BIKE MOSTLY USED AND LEAST USED IS DOCKED_BIKE


SELECT MEMBER_CASUAL, (COUNT(RIDE_ID)/ (SELECT COUNT(*) FROM TRIPS) * 100) AS PERC FROM TRIPS GROUP BY MEMBER_CASUAL ORDER BY PERC DESC;
-- CASUAL RIDERS ARE 36% AND MEMBER RIDERS ARE 64%

SELECT DAY_OF_WEEK , COUNT(*) AS COUNTS FROM TRIPS GROUP BY DAY_OF_WEEK ORDER BY COUNTS DESC;
--ON MONDAY THE COUNT OF RIDES IS THE LEAST AND ON SAT, THE COUNT IS THE MOST.

SELECT MONTHS, COUNT(*) AS COUNTS FROM TRIPS GROUP BY MONTHS ORDER BY COUNTS DESC;
-- JAN HAS THE LEAST COUNT OF RIDES AND AUGUST IS THE MOST COUNT OF RIDES.

SELECT RIDEABLE_TYPE , AVG(RIDE_LENGTH) AS AVG_MIN
FROM TRIPS GROUP BY RIDEABLE_TYPE;


SELECT MEMBER_CASUAL, (SUM(RIDE_LENGTH) / 60) from TRIPS GROUP BY MEMBER_CASUAL;
--RIDE TIME FOR CASUAL IS HIGH THAN MEMBER

SELECT months, member_casual, COUNT(ride_id) AS total_trips
FROM TRIPS
GROUP BY months, member_casual
ORDER BY member_casual;
--RIDE PER MONTH BY MEMBER AND CASUAL RIDERS


SELECT EXTRACT(HOUR FROM started_at) AS hour_of_day, member_casual, COUNT(ride_id) AS total_trips
FROM TRIPS
GROUP BY hour_of_day, member_casual
ORDER BY member_casual, TOTAL_TRIPS DESC;
-- NO OF TRIPS PER HOURS



SELECT months, member_casual, AVG(ride_length) AS avg_ride_duration
FROM TRIPS
GROUP BY months, member_casual;
-- AVG RIDE_LENGTH PER DAY BY MEMBER AND CASUAL


SELECT day_of_week, member_casual, AVG(ride_length) AS avg_ride_duration
FROM TRIPS
GROUP BY day_of_week, member_casual;
-- AVG RIDE_LENGTH PER DAY BY MEMBER AND CASUAL